name: Deploy slack app using serverless

on:
  workflow_dispatch:

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js '22.x'
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: serverless deploy
        run: npm install && npm run deploy
        working-directory: './slack app'
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CLIENT_ID: ${{ vars.SLACK_CLIENT_ID }}
          SLACK_CLIENT_SECRET: ${{ secrets.SLACK_CLIENT_SECRET }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          POSTHOG_HOST: ${{ vars.POSTHOG_HOST }}
          ACCOUNT_TABLE: ${{ vars.ACCOUNT_TABLE }}

  deploy-prod:
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js '22.x'
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: serverless deploy
        run: npm install && npm run deploy:prod
        working-directory: './slack app'
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CLIENT_ID: ${{ vars.SLACK_CLIENT_ID }}
          SLACK_CLIENT_SECRET: ${{ secrets.SLACK_CLIENT_SECRET }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          POSTHOG_HOST: ${{ vars.POSTHOG_HOST }}
          ACCOUNT_TABLE: ${{ vars.ACCOUNT_TABLE }}
