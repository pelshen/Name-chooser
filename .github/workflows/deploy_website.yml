name: Deploy website using serverless

on:
  workflow_dispatch:

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment: development
    defaults:
      run:
        working-directory: './website'

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js '22.x'
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - run: npm run build
      - name: serverless deploy
        uses: serverless/github-action@v4
        with:
          args: deploy -s dev
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          SLACK_CLIENT_ID: ${{ vars.SLACK_CLIENT_ID }}
          SLACK_CLIENT_SECRET: ${{ secrets.SLACK_CLIENT_SECRET }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SESSION_SECRET: ${{ vars.SESSION_SECRET }}
          SESSION_TABLE: ${{ vars.SESSION_TABLE }}

  deploy-prod:
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: './website'

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js '22.x'
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - run: npm run build
      - name: serverless deploy
        uses: serverless/github-action@v4
        with:
          args: deploy -s prod
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          SLACK_CLIENT_ID: ${{ vars.SLACK_CLIENT_ID }}
          SLACK_CLIENT_SECRET: ${{ secrets.SLACK_CLIENT_SECRET }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SESSION_SECRET: ${{ vars.SESSION_SECRET }}
          SESSION_TABLE: ${{ vars.SESSION_TABLE }}
